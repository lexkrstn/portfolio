events {
  # worker_connections  1024;
}

http {
  server_tokens off;
  charset utf-8;

  types {
    image/svg+xml   svg svgz;
  }

  map $sent_http_content_type $expires {
    default         off;
    ~image/         7d;
  }

  server {
    listen 80 default_server;

    server_name _;

    location ~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    location ~ /api/ {
      proxy_pass http://portfolio:3000;
    }

    location / {
      proxy_pass http://portfolio:8080/;
    }
  }

  server {
    listen 443 ssl http2 default_server;
    server_name akorostin.com localhost;

    gzip on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

    ssl_certificate     /etc/letsencrypt/live/akorostin.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/akorostin.com/privkey.pem;

    # all further requests of Lets Encrypt will be redirected to HTTPS
    location ~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    location ~ /api/ {
      proxy_pass http://portfolio:3000;
    }

    location /static/ {
      alias /var/www/static/;
      autoindex off;
      gzip_static on;
      expires max;
      add_header Cache-Control public;
    }

    location / {
      proxy_pass http://portfolio:8080/;
    }
  }

  server {
    listen 80;
    listen 443 ssl http2;
    server_name static.*;

    ssl_certificate     /etc/letsencrypt/live/akorostin.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/akorostin.com/privkey.pem;

    gzip on;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

    location ~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    location / {
      root /var/www/static/;
      autoindex off;
      gzip_static on;

      add_header Cache-Control public; # alow caching on CDN and browser

      expires $expires;

      if ($http_origin ~* "^https?://(akorostin.com|localhost)$") {
        add_header 'Access-Control-Allow-Origin' "$http_origin";
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        # Custom headers and headers various browsers *should* be OK with but aren't
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
      }
      if ($request_method = 'OPTIONS') {
        # Tell client that this pre-flight info is valid for 20 days
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
    }
  }
}
