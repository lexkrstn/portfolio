version: '3.7'

services:

  portfolio:
    image: lexkrstn/portfolio
    container_name: portfolio
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - mongo
    volumes:
      - static:/mnt/static
    environment:
      STATIC_DIR: /mnt/static
      STATIC_URL: https://static.akorostin.com
      NODE_ENV: production
      API_EXTERNAL_URL: https://akorostin.com
    env_file:
      - .env
    networks:
      - common
    build:
      context: .
      dockerfile: Dockerfile
    healthcheck:
      test: curl --fail http://localhost:3000/api/v1/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s
    logging:
      driver: json-file
      options:
        max-size: 50K
        max-file: "10"

  mongo:
    image: mongo:7.0.8
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mongo:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s
    ports:
      - 27017:27017
    networks:
      - common
    command: --quiet --logpath /dev/null

  nginx:
    image: nginx
    container_name: nginx
    restart: unless-stopped
    depends_on:
      - portfolio
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - static:/var/www/static
    networks:
      - common
    logging:
      driver: json-file
      options:
        max-size: 50K
        max-file: "10"

  certbot:
    image: certbot/certbot
    container_name: certbot
    profiles: ["certbot"]
    restart: "no"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    # certonly: only generate certificate without installing
    # webroot: use our own webserver in this case NGINX
    # w: root directory of webserver for the challenges
    # force-renewal: on repeated run renew certificates
    # email: your email for notifcations
    # d: domain for the certificate (it can be multiple -d)
    # agree-tos: agree the terms of service automatically
    command: >
      certonly --webroot --agree-tos --force-renewal
      -w /var/www/certbot
      --email l3xkrtn@gmail.com
      -d akorostin.com
      -d static.akorostin.com

networks:
  common:
    driver: bridge

volumes:
  static:
    driver: local
  mongo:
    driver: local
